{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-486e23d3be109c141613a7dfbbc5659d80af419910985a8164e61235fb7efeaf39fe3133ed5a0c0664caa5f83e48682d13ef150afa6a140af95fb9a3ed380c27",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'StoryBookPOC'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.html',\r\n  styleUrl: './app.scss',\r\n})\r\nexport class App {\r\n  protected title = 'StoryBookPOC';\r\n}\r\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\r\n"
        },
        {
            "name": "Home",
            "id": "component-Home-e844cc4ca5ec1f22b17195157019a75d77a337535cecfe2ed91ab4e6ae9b1e183d07f2a24a0aed122eceef6ce6857fb1d0c63a20a948357d256138276073e997",
            "file": "src/app/home/home.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PSIStatusBadge"
                },
                {
                    "name": "PsiCircleBadge"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PSIStatusBadge } from '../shared/components/psi-status-badge/psi-status-badge';\r\nimport { PsiCircleBadge } from '../shared/components/psi-circle-badge/psi-circle-badge';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  imports: [PSIStatusBadge, PsiCircleBadge],\r\n  templateUrl: './home.html',\r\n  styleUrl: './home.scss',\r\n  standalone: true,\r\n})\r\nexport class Home {}\r\n",
            "styleUrl": "./home.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Status Badge</h1>\r\n\r\n<div class=\"status-badge-container\">\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'secondary'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'secondary'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'secondary'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary High</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'secondary-high'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'secondary-high'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'secondary-high'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary Medium</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'secondary-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'secondary-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'secondary-med'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Info</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'info'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'info'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'info'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Info Medium</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'info-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'info-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'info-med'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Success</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'success'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'success'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'success'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Success Medium</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'success-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'success-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'success-med'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Warning</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'warning'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'warning'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'warning'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Warning Medium</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'warning-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'warning-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'warning-med'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Error</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'error'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'error'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'error'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n  <div class=\"status-badge-container__row\">\r\n    <h4 class=\"typo-cri-h6-black-medium\">Error Medium</h4>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'small'\"\r\n      [statusType]=\"'error-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'medium'\"\r\n      [statusType]=\"'error-med'\"\r\n    ></app-psi-status-badge>\r\n    <app-psi-status-badge\r\n      [statusText]=\"'Success'\"\r\n      [badgeSize]=\"'large'\"\r\n      [statusType]=\"'error-med'\"\r\n    ></app-psi-status-badge>\r\n  </div>\r\n</div>\r\n\r\n<h1>Circle Badge</h1>\r\n\r\n<div class=\"circle-badge-container\">\r\n  <app-psi-circle-badge [statusText]=\"'Text'\" [statusType]=\"'secondary'\"></app-psi-circle-badge>\r\n  <app-psi-circle-badge [statusText]=\"'Success'\" [statusType]=\"'success'\"></app-psi-circle-badge>\r\n  <app-psi-circle-badge [statusText]=\"'Warning'\" [statusType]=\"'warning'\"></app-psi-circle-badge>\r\n  <app-psi-circle-badge [statusText]=\"'Error'\" [statusType]=\"'error'\"></app-psi-circle-badge>\r\n  <app-psi-circle-badge [statusText]=\"'Info'\" [statusType]=\"'info'\"></app-psi-circle-badge>\r\n</div>\r\n"
        },
        {
            "name": "PsiCircleBadge",
            "id": "component-PsiCircleBadge-2e924a28ce2f1a73bb5fcc21ca495901f70268b00b8c8111f8a23fdf91eccf5ae4f1223102ef804000b40aad243c22f159dc598b871bb4dfc986daa318eb705f",
            "file": "src/app/shared/components/psi-circle-badge/psi-circle-badge.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-circle-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-circle-badge.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "statusText",
                    "defaultValue": "'--'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusType",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-psi-circle-badge',\r\n  imports: [CommonModule],\r\n  templateUrl: './psi-circle-badge.html',\r\n  styleUrl: './psi-circle-badge.scss',\r\n})\r\nexport class PsiCircleBadge {\r\n  @Input() statusText: string = '--';\r\n  @Input() statusType: 'secondary' | 'success' | 'warning' | 'error' | 'info' = 'secondary';\r\n}\r\n",
            "styleUrl": "./psi-circle-badge.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"circle-badge\">\r\n  <div\r\n    class=\"circle-badge__icon\"\r\n    [class.circle-badge__icon--secondary]=\"statusType === 'secondary'\"\r\n    [class.circle-badge__icon--success]=\"statusType === 'success'\"\r\n    [class.circle-badge__icon--warning]=\"statusType === 'warning'\"\r\n    [class.circle-badge__icon--error]=\"statusType === 'error'\"\r\n    [class.circle-badge__icon--info]=\"statusType === 'info'\"\r\n  ></div>\r\n  <div\r\n    class=\"typo-mon-body-black-regular circle-badge__text\"\r\n    [textContent]=\"statusText | titlecase\"\r\n  ></div>\r\n</div>\r\n"
        },
        {
            "name": "PSIStatusBadge",
            "id": "component-PSIStatusBadge-7e579c21d1813bc2c974135806fe44f6664395475c16f08dc7dd0378ce6ceecfb5c3f880de0fa298e01b23f1628729020de47a226a4271ad6a29176dbe530c07",
            "file": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-status-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-status-badge.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "badgeSize",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "statusText",
                    "defaultValue": "'--'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusType",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"secondary-high\" | \"secondary-med\" | \"secondary\" | \"info\" | \"info-med\" | \"success\" | \"success-med\" | \"warning\" | \"warning-med\" | \"error\" | \"error-med\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-psi-status-badge',\r\n  imports: [CommonModule],\r\n  templateUrl: './psi-status-badge.html',\r\n  styleUrl: './psi-status-badge.scss',\r\n  standalone: true,\r\n})\r\nexport class PSIStatusBadge {\r\n  @Input() statusText: string = '--';\r\n  @Input() badgeSize: 'small' | 'medium' | 'large' = 'small';\r\n  @Input() statusType:\r\n    | 'secondary-high'\r\n    | 'secondary-med'\r\n    | 'secondary'\r\n    | 'info'\r\n    | 'info-med'\r\n    | 'success'\r\n    | 'success-med'\r\n    | 'warning'\r\n    | 'warning-med'\r\n    | 'error'\r\n    | 'error-med' = 'secondary';\r\n}\r\n",
            "styleUrl": "./psi-status-badge.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\r\n  class=\"status-badge\"\r\n  [class.status-badge--small]=\"badgeSize === 'small'\"\r\n  [class.status-badge--medium]=\"badgeSize === 'medium'\"\r\n  [class.status-badge--large]=\"badgeSize === 'large'\"\r\n  [class.status-badge__secondary-high]=\"statusType === 'secondary-high'\"\r\n  [class.status-badge__secondary-med]=\"statusType === 'secondary-med'\"\r\n  [class.status-badge__secondary]=\"statusType === 'secondary'\"\r\n  [class.status-badge__info]=\"statusType === 'info'\"\r\n  [class.status-badge__info-med]=\"statusType === 'info-med'\"\r\n  [class.status-badge__success]=\"statusType === 'success'\"\r\n  [class.status-badge__success-med]=\"statusType === 'success-med'\"\r\n  [class.status-badge__warning]=\"statusType === 'warning'\"\r\n  [class.status-badge__warning-med]=\"statusType === 'warning-med'\"\r\n  [class.status-badge__error]=\"statusType === 'error'\"\r\n  [class.status-badge__error-med]=\"statusType === 'error-med'\"\r\n>\r\n  @if (badgeSize === 'large') {\r\n  <span class=\"typo-mon-paragraph-black-medium\" [textContent]=\"statusText | titlecase\"></span>\r\n  } @else if (badgeSize === 'medium') {\r\n  <span class=\"typo-mon-caption-black-medium\" [textContent]=\"statusText | titlecase\"></span>\r\n  } @else if (badgeSize === 'small') {\r\n  <span class=\"typo-mon-small-black-medium\" [textContent]=\"statusText | titlecase\"></span>\r\n  }\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new AngularNodeAppEngine()"
            },
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideClientHydration(withEventReplay()),\r\n  ],\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(App, config)"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "join(import.meta.dirname, '../browser')"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "reqHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createNodeRequestHandler(app)",
                "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\r\n}"
            },
            {
                "name": "serverRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ServerRoute[]",
                "defaultValue": "[\r\n  {\r\n    path: '**',\r\n    renderMode: RenderMode.Prerender,\r\n  },\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "angularApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new AngularNodeAppEngine()"
                },
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "join(import.meta.dirname, '../browser')"
                },
                {
                    "name": "reqHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createNodeRequestHandler(app)",
                    "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                    "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideBrowserGlobalErrorListeners(),\r\n    provideZoneChangeDetection({ eventCoalescing: true }),\r\n    provideRouter(routes),\r\n    provideClientHydration(withEventReplay()),\r\n  ],\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(App, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\r\n}"
                }
            ],
            "src/app/app.routes.server.ts": [
                {
                    "name": "serverRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerRoute[]",
                    "defaultValue": "[\r\n  {\r\n    path: '**',\r\n    renderMode: RenderMode.Prerender,\r\n  },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.ts",
                "type": "component",
                "linktype": "component",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-circle-badge/psi-circle-badge.ts",
                "type": "component",
                "linktype": "component",
                "name": "PsiCircleBadge",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
                "type": "component",
                "linktype": "component",
                "name": "PSIStatusBadge",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reqHandler",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            }
        ]
    }
}