{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-619cdcdcdad071d645a27f045bbb593ed364e2dc8f31ab1d493f5e06c2249d17e6684fb56aba917730eb477d7012b4fb2e80dc29983827346873c47a0e218f63",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'StoryBookPOC'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n})\nexport class App {\n  protected title = 'StoryBookPOC';\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\n"
        },
        {
            "name": "Home",
            "id": "component-Home-4685962d3f32b50effbd1338e7113007f2a349d961673721c887a8854661e6a726f1c4ac46653a2c98da06cde0ace869b54502020c3b955193ad509f3bb97242",
            "file": "src/app/home/home.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PSIStatusBadge"
                },
                {
                    "name": "PsiCircleBadge"
                },
                {
                    "name": "PsiAlert"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { PSIStatusBadge } from '../shared/components/psi-status-badge/psi-status-badge';\nimport { PsiCircleBadge } from '../shared/components/psi-circle-badge/psi-circle-badge';\nimport { PsiAlert } from '../shared/components/psi-alert/psi-alert';\n\n@Component({\n  selector: 'app-home',\n  imports: [PSIStatusBadge, PsiCircleBadge, PsiAlert],\n  templateUrl: './home.html',\n  styleUrl: './home.scss',\n  standalone: true,\n})\nexport class Home {}\n",
            "styleUrl": "./home.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Status Badge</h1>\n\n<div class=\"status-badge-container\">\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'secondary'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'secondary'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'secondary'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary High</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'secondary-high'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'secondary-high'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'secondary-high'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Secondary Medium</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'secondary-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'secondary-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'secondary-med'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Info</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'info'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'info'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'info'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Info Medium</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'info-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'info-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'info-med'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Success</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'success'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'success'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'success'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Success Medium</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'success-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'success-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'success-med'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Warning</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'warning'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'warning'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'warning'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Warning Medium</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'warning-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'warning-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'warning-med'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Error</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'error'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'error'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'error'\"\n    ></app-psi-status-badge>\n  </div>\n  <div class=\"status-badge-container__row\">\n    <h4 class=\"typo-cri-h6-black-medium\">Error Medium</h4>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'small'\"\n      [statusType]=\"'error-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'medium'\"\n      [statusType]=\"'error-med'\"\n    ></app-psi-status-badge>\n    <app-psi-status-badge\n      [statusText]=\"'Success'\"\n      [badgeSize]=\"'large'\"\n      [statusType]=\"'error-med'\"\n    ></app-psi-status-badge>\n  </div>\n</div>\n\n<h1>Circle Badge</h1>\n\n<div class=\"circle-badge-container\">\n  <app-psi-circle-badge [statusText]=\"'Text'\" [statusType]=\"'secondary'\"></app-psi-circle-badge>\n  <app-psi-circle-badge [statusText]=\"'Success'\" [statusType]=\"'success'\"></app-psi-circle-badge>\n  <app-psi-circle-badge [statusText]=\"'Warning'\" [statusType]=\"'warning'\"></app-psi-circle-badge>\n  <app-psi-circle-badge [statusText]=\"'Error'\" [statusType]=\"'error'\"></app-psi-circle-badge>\n  <app-psi-circle-badge [statusText]=\"'Info'\" [statusType]=\"'info'\"></app-psi-circle-badge>\n</div>\n\n<h1>Alert</h1>\n\n<div class=\"alert-container\">\n  <app-psi-alert\n    [title]=\"'Alert'\"\n    type=\"warning\"\n    position=\"bottom-left\"\n    [timeout]=\"3000\"\n  ></app-psi-alert>\n  <app-psi-alert\n    [title]=\"'Alert'\"\n    type=\"error\"\n    position=\"top-right\"\n    [timeout]=\"5000\"\n  ></app-psi-alert>\n  <app-psi-alert [title]=\"'Alert'\" type=\"info\" position=\"top-left\" [timeout]=\"7000\"></app-psi-alert>\n  <app-psi-alert [title]=\"'Alert'\" type=\"success\" position=\"bottom-right\"></app-psi-alert>\n</div>\n"
        },
        {
            "name": "PsiAlert",
            "id": "component-PsiAlert-86f6f1a69ba8c7bb8a1b0fbb8151a1cd997e7ba7ce8478160ee254a1cc96f466b5247ac19d7c42656d02a2c45cc4ec6e6cd78c79d160f59d569cc8cc0e6d5f25",
            "file": "src/app/shared/components/psi-alert/psi-alert.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-alert",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-alert.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "position",
                    "defaultValue": "'bottom-right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"",
                    "decorators": []
                },
                {
                    "name": "timeout",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'--'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"success\" | \"error\" | \"warning\" | \"info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faTimes",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "visible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-psi-alert',\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './psi-alert.html',\n  styleUrl: './psi-alert.scss',\n})\nexport class PsiAlert {\n  @Input() title: string = '--';\n  @Input() type: 'success' | 'error' | 'warning' | 'info' = 'success';\n  @Input() position: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' = 'bottom-right';\n  @Input() timeout: number = 0;\n  public visible: boolean = true;\n  public faTimes = faTimes;\n\n  ngOnInit() {\n    if (this.visible && this.timeout) {\n      setTimeout(() => {\n        this.visible = false;\n      }, this.timeout);\n    } else {\n      this.visible = true;\n    }\n  }\n\n  close() {\n    this.visible = false;\n  }\n}\n",
            "styleUrl": "./psi-alert.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"psi-alert psi-alert__{{ type }} psi-alert__{{ position }}\"\n  *ngIf=\"visible\"\n  (click)=\"close()\"\n>\n  <div class=\"psi-alert__content psi-alert__content--{{ type }}\">\n    <div class=\"psi-alert__title\" [textContent]=\"title\"></div>\n  </div>\n  <div class=\"psi-alert__icon psi-alert__icon--{{ type }}\">\n    <fa-icon class=\"psi-alert__icon-icon\" [icon]=\"faTimes\"></fa-icon>\n  </div>\n</div>\n"
        },
        {
            "name": "PsiBanner",
            "id": "component-PsiBanner-21e776338c27746c56e98ca90c89f1a24ac467a8f2d30a8487411fdc9dfbe88effeba930ea840bf55a619271c41cb9c84df1a19f05534c766add36f246a7dde8",
            "file": "src/app/shared/components/psi-banner/psi-banner.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-banner.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkText",
                    "defaultValue": "'Link'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkUrl",
                    "defaultValue": "'#'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'Message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subject",
                    "defaultValue": "'Subject'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"success\" | \"warning\" | \"error\" | \"info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faTimes",
                    "defaultValue": "faTimes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "visible",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faCheckCircle, faExclamationTriangle, faExclamationCircle, faInfoCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-psi-banner',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './psi-banner.html',\n  styleUrl: './psi-banner.scss',\n})\nexport class PsiBanner {\n  @Input() subject: string = 'Subject';\n  @Input() message: string = 'Message';\n  @Input() linkText: string = 'Link';\n  @Input() linkUrl: string = '#';\n  @Input() buttonText: string = 'Button';\n  @Input() type: 'success' | 'warning' | 'error' | 'info' = 'success';\n  @Input() showButton: boolean = true;\n\n  public visible: boolean = true;\n  public faTimes = faTimes;\n  \n  getIcon() {\n    switch (this.type) {\n      case 'success':\n        return faCheckCircle;\n      case 'warning':\n        return faExclamationTriangle;\n      case 'error':\n        return faExclamationCircle;\n      case 'info':\n        return faInfoCircle;\n      default:\n        return faInfoCircle;\n    }\n  }\n\n  onButtonClick() {\n    // Button action can be implemented here or via event emitter\n    console.log('Banner button clicked');\n  }\n\n  close() {\n    this.visible = false;\n  }\n}\n",
            "styleUrl": "./psi-banner.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"psi-banner psi-banner__{{ type }}\" *ngIf=\"visible\">\n  <!-- Banner header with colored bar -->\n  <div class=\"psi-banner__header psi-banner__header--{{ type }}\"></div>\n  \n  <!-- Banner content with icon, text, button, and close -->\n  <div class=\"psi-banner__content\">\n    <!-- Left section: Icon and text -->\n    <div class=\"psi-banner__left\">\n      <!-- Icon -->\n      <div class=\"psi-banner__icon psi-banner__icon--{{ type }}\">\n        <fa-icon [icon]=\"getIcon()\"></fa-icon>\n      </div>\n      \n      <!-- Text content -->\n      <div class=\"psi-banner__text\">\n        <div class=\"typo-mon-body-black-bold psi-banner__subject\">{{ subject }}</div>\n        <div class=\"typo-mon-paragraph-black-regular psi-banner__message\">\n          {{ message }}\n          <a *ngIf=\"linkText\" [href]=\"linkUrl\" class=\"typo-mon-paragraph-black-medium psi-banner__link\">{{ linkText }}</a>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Right section: Action button and close -->\n    <div class=\"psi-banner__right\">\n      <!-- Action button -->\n      <button *ngIf=\"showButton\" class=\"typo-mon-paragraph-black-medium psi-banner__button\" (click)=\"onButtonClick()\">\n        {{ buttonText }}\n      </button>\n      \n      <!-- Close button -->\n      <div class=\"psi-banner__close\" (click)=\"close()\">\n        <fa-icon [icon]=\"faTimes\"></fa-icon>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "PsiCircleBadge",
            "id": "component-PsiCircleBadge-a814d6a900cdd8cdffc7e8ecfa8b2b828e0f6e765b6e9782f88c077014e2f0f6d175dade5ce732d068030c6dece3f33868fbaa725291e65157b3b0dc870c6d08",
            "file": "src/app/shared/components/psi-circle-badge/psi-circle-badge.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-circle-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-circle-badge.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "statusText",
                    "defaultValue": "'--'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusType",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "\"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-psi-circle-badge',\n  imports: [CommonModule],\n  templateUrl: './psi-circle-badge.html',\n  styleUrl: './psi-circle-badge.scss',\n})\nexport class PsiCircleBadge {\n  @Input() statusText: string = '--';\n  @Input() statusType: 'secondary' | 'success' | 'warning' | 'error' | 'info' = 'secondary';\n}\n",
            "styleUrl": "./psi-circle-badge.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"circle-badge\">\n  <div\n    class=\"circle-badge__icon\"\n    [class.circle-badge__icon--secondary]=\"statusType === 'secondary'\"\n    [class.circle-badge__icon--success]=\"statusType === 'success'\"\n    [class.circle-badge__icon--warning]=\"statusType === 'warning'\"\n    [class.circle-badge__icon--error]=\"statusType === 'error'\"\n    [class.circle-badge__icon--info]=\"statusType === 'info'\"\n  ></div>\n  <div\n    class=\"typo-mon-body-black-regular circle-badge__text\"\n    [textContent]=\"statusText | titlecase\"\n  ></div>\n</div>\n"
        },
        {
            "name": "PSIStatusBadge",
            "id": "component-PSIStatusBadge-786ef7b3cee5ebbe6a5f6fcd2bdca8c4c76a850a504bbf2f8faa62d0e159b2efc20724e83fe7cf11cea95331bf4967e274c56ff4039b569f786a2e3e79d1dee5",
            "file": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-status-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-status-badge.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "badgeSize",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "statusText",
                    "defaultValue": "'--'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusType",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"secondary-high\" | \"secondary-med\" | \"secondary\" | \"info\" | \"info-med\" | \"success\" | \"success-med\" | \"warning\" | \"warning-med\" | \"error\" | \"error-med\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-psi-status-badge',\n  imports: [CommonModule],\n  templateUrl: './psi-status-badge.html',\n  styleUrl: './psi-status-badge.scss',\n  standalone: true,\n})\nexport class PSIStatusBadge {\n  @Input() statusText: string = '--';\n  @Input() badgeSize: 'small' | 'medium' | 'large' = 'small';\n  @Input() statusType:\n    | 'secondary-high'\n    | 'secondary-med'\n    | 'secondary'\n    | 'info'\n    | 'info-med'\n    | 'success'\n    | 'success-med'\n    | 'warning'\n    | 'warning-med'\n    | 'error'\n    | 'error-med' = 'secondary';\n}\n",
            "styleUrl": "./psi-status-badge.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"status-badge\"\n  [class.status-badge--small]=\"badgeSize === 'small'\"\n  [class.status-badge--medium]=\"badgeSize === 'medium'\"\n  [class.status-badge--large]=\"badgeSize === 'large'\"\n  [class.status-badge__secondary-high]=\"statusType === 'secondary-high'\"\n  [class.status-badge__secondary-med]=\"statusType === 'secondary-med'\"\n  [class.status-badge__secondary]=\"statusType === 'secondary'\"\n  [class.status-badge__info]=\"statusType === 'info'\"\n  [class.status-badge__info-med]=\"statusType === 'info-med'\"\n  [class.status-badge__success]=\"statusType === 'success'\"\n  [class.status-badge__success-med]=\"statusType === 'success-med'\"\n  [class.status-badge__warning]=\"statusType === 'warning'\"\n  [class.status-badge__warning-med]=\"statusType === 'warning-med'\"\n  [class.status-badge__error]=\"statusType === 'error'\"\n  [class.status-badge__error-med]=\"statusType === 'error-med'\"\n>\n  @if (badgeSize === 'large') {\n  <span class=\"typo-mon-paragraph-black-medium\" [textContent]=\"statusText | titlecase\"></span>\n  } @else if (badgeSize === 'medium') {\n  <span class=\"typo-mon-caption-black-medium\" [textContent]=\"statusText | titlecase\"></span>\n  } @else if (badgeSize === 'small') {\n  <span class=\"typo-mon-small-black-medium\" [textContent]=\"statusText | titlecase\"></span>\n  }\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new AngularNodeAppEngine()"
            },
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n  ],\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(App, config)"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "join(import.meta.dirname, '../browser')"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "reqHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createNodeRequestHandler(app)",
                "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\n}"
            },
            {
                "name": "serverRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ServerRoute[]",
                "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender,\n  },\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "angularApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new AngularNodeAppEngine()"
                },
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "join(import.meta.dirname, '../browser')"
                },
                {
                    "name": "reqHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createNodeRequestHandler(app)",
                    "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                    "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n  ],\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(App, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideServerRendering(withRoutes(serverRoutes))],\n}"
                }
            ],
            "src/app/app.routes.server.ts": [
                {
                    "name": "serverRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerRoute[]",
                    "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender,\n  },\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.ts",
                "type": "component",
                "linktype": "component",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-alert/psi-alert.ts",
                "type": "component",
                "linktype": "component",
                "name": "PsiAlert",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-banner/psi-banner.ts",
                "type": "component",
                "linktype": "component",
                "name": "PsiBanner",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-circle-badge/psi-circle-badge.ts",
                "type": "component",
                "linktype": "component",
                "name": "PsiCircleBadge",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
                "type": "component",
                "linktype": "component",
                "name": "PSIStatusBadge",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reqHandler",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            }
        ]
    }
}