{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-69a07ec433889c4745ce4ffc01fb1ad562905c632763515e2cc49d956c3ae7ea0e784e20f0e82adf15d32dc439a4a8fe810331f2721dd92a8ddc5dd04f7323f6",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'StoryBookPOC'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected title = 'StoryBookPOC';\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\n"
        },
        {
            "name": "Home",
            "id": "component-Home-7e8c667581660ad7fe4888b5d27f940326d832a6e0cb91ba03db1224566a6bcae7c30c5e3e188df7c9075c86e702e36b1a3794735c56ab0afca149ce08564920",
            "file": "src/app/home/home.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PSIStatusBadgeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { PSIStatusBadgeComponent } from '../shared/components/psi-status-badge/psi-status-badge';\n\n@Component({\n  selector: 'app-home',\n  imports: [PSIStatusBadgeComponent],\n  templateUrl: './home.html',\n  styleUrl: './home.scss',\n  standalone: true,\n})\nexport class Home {}\n",
            "styleUrl": "./home.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Status Badge</h1>\n\n<div class=\"status-badge-container\">\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Secondary</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'secondary'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'secondary'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'secondary'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Secondary High</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'secondary-high'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'secondary-high'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'secondary-high'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Secondary Medium</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'secondary-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'secondary-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'secondary-med'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Info</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'info'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'info'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'info'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Info Medium</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'info-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'info-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'info-med'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Success</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'success'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'success'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'success'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Success Medium</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'success-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'success-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'success-med'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Warning</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'warning'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'warning'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'warning'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Warning Medium</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'warning-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'warning-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'warning-med'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Error</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'error'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'error'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'error'\"></app-psi-status-badge>\n    </div>\n    <div class=\"status-badge-container__row\">\n        <h4 class=\"typo-cri-h6-black-medium\">Error Medium</h4>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'small'\" [statusType]=\"'error-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'medium'\" [statusType]=\"'error-med'\"></app-psi-status-badge>\n        <app-psi-status-badge [statusText]=\"'Success'\" [badgeSize]=\"'large'\" [statusType]=\"'error-med'\"></app-psi-status-badge>\n    </div>\n</div>"
        },
        {
            "name": "PSIStatusBadgeComponent",
            "id": "component-PSIStatusBadgeComponent-bc13459144a4b46a85d1b722ded57d52312e769fd459345e98f8a5d8ffa537e38c3df42fe3185b43590eba67978461062f7f7ebc6b2f5d48e73e948936f06857",
            "file": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-psi-status-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./psi-status-badge.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "badgeSize",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "statusText",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusType",
                    "defaultValue": "'secondary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"secondary-high\" | \"secondary-med\" | \"secondary\" | \"info\" | \"info-med\" | \"success\" | \"success-med\" | \"warning\" | \"warning-med\" | \"error\" | \"error-med\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-psi-status-badge',\n  imports: [CommonModule],\n  templateUrl: './psi-status-badge.html',\n  styleUrl: './psi-status-badge.scss',\n  standalone: true,\n})\nexport class PSIStatusBadgeComponent {\n  @Input() statusText: string = 'success';\n  @Input() badgeSize: 'small' | 'medium' | 'large' = 'small';\n  @Input() statusType:\n    | 'secondary-high'\n    | 'secondary-med'\n    | 'secondary'\n    | 'info'\n    | 'info-med'\n    | 'success'\n    | 'success-med'\n    | 'warning'\n    | 'warning-med'\n    | 'error'\n    | 'error-med' = 'secondary';\n}\n",
            "styleUrl": "./psi-status-badge.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\n  class=\"status-badge\"\n  [class.status-badge--small]=\"badgeSize === 'small'\"\n  [class.status-badge--medium]=\"badgeSize === 'medium'\"\n  [class.status-badge--large]=\"badgeSize === 'large'\"\n  [class.status-badge__secondary-high]=\"statusType === 'secondary-high'\"\n  [class.status-badge__secondary-med]=\"statusType === 'secondary-med'\"\n  [class.status-badge__secondary]=\"statusType === 'secondary'\"\n  [class.status-badge__info]=\"statusType === 'info'\"\n  [class.status-badge__info-med]=\"statusType === 'info-med'\"\n  [class.status-badge__success]=\"statusType === 'success'\"\n  [class.status-badge__success-med]=\"statusType === 'success-med'\"\n  [class.status-badge__warning]=\"statusType === 'warning'\"\n  [class.status-badge__warning-med]=\"statusType === 'warning-med'\"\n  [class.status-badge__error]=\"statusType === 'error'\"\n  [class.status-badge__error-med]=\"statusType === 'error-med'\"\n>\n  @if (badgeSize === 'large') {\n  <span\n    class=\"typo-mon-paragraph-black-medium\"\n    [textContent]=\"statusText | titlecase\"\n  ></span>\n  } @else if (badgeSize === 'medium') {\n  <span\n    class=\"typo-mon-caption-black-medium\"\n    [textContent]=\"statusText | titlecase\"\n  ></span>\n  } @else if (badgeSize === 'small') {\n  <span\n    class=\"typo-mon-small-black-medium\"\n    [textContent]=\"statusText | titlecase\"\n  ></span>\n  }\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new AngularNodeAppEngine()"
            },
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes), provideClientHydration(withEventReplay())\n  ]\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(App, config)"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "join(import.meta.dirname, '../browser')"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "reqHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createNodeRequestHandler(app)",
                "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}"
            },
            {
                "name": "serverRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ServerRoute[]",
                "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "angularApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new AngularNodeAppEngine()"
                },
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "join(import.meta.dirname, '../browser')"
                },
                {
                    "name": "reqHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createNodeRequestHandler(app)",
                    "rawdescription": "Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.",
                    "description": "<p>Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.</p>\n"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes), provideClientHydration(withEventReplay())\n  ]\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(App, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}"
                }
            ],
            "src/app/app.routes.server.ts": [
                {
                    "name": "serverRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerRoute[]",
                    "defaultValue": "[\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 8,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.ts",
                "type": "component",
                "linktype": "component",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/psi-status-badge/psi-status-badge.ts",
                "type": "component",
                "linktype": "component",
                "name": "PSIStatusBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reqHandler",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            }
        ]
    }
}